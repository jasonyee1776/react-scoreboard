{"version":3,"sources":["components/Context/index.js","components/Stats.js","components/Stopwatch.js","components/Header.js","components/Counter.js","components/Crown.js","components/Player.js","components/AddPlayerForm.js","components/App.js","index.js"],"names":["ScoreboardContext","React","createContext","Provider","Consumer","Stats","context","totalPlayers","length","totalPoints","reduce","total","player","score","className","Stopwatch","state","isRunning","elapsedTime","previousTime","handleStopwatch","setState","prevState","Date","now","tick","handleReset","this","intervalID","setInterval","clearInterval","seconds","Math","floor","onClick","Component","Header","title","defaultProps","Counter","index","changeScore","Crown","isHighScore","viewBox","d","transform","width","height","Player","props","removePlayer","name","id","PureComponent","AddPlayerForm","value","handleValueChange","e","target","handleSubmit","preventDefault","trim","alert","addPlayer","onSubmit","type","placeholder","onChange","App","players","prevPlayerId","handleRemovePlayer","filter","p","handleScoreChange","delta","handleAddNewPlayer","getHighScore","scores","map","highScore","max","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9121e98b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ScoreboardContext = React.createContext();\n\nexport const Provider = ScoreboardContext.Provider;  \nexport const Consumer = ScoreboardContext.Consumer;","import React from 'react';\nimport { Consumer } from './Context';\n\nconst Stats = () => {\n    return (\n        <Consumer> \n            { context => {\n                const totalPlayers = context.length;\n                const totalPoints = context.reduce( (total, player) => {\n                    return total + player.score;\n                }, 0)\n\n                return (\n                    <table className='stats'>\n                        <tbody>\n                            <tr>\n                                <td>Players: </td>\n                                <td>{totalPlayers}</td>\n                            </tr>\n                            <tr>\n                                <td>Total Points</td>\n                                <td>{totalPoints}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                )\n            }}\n        </Consumer> \n    )\n}\n\nexport default Stats;","import React, { Component } from 'react';\n\nclass Stopwatch extends Component {\n\n    state = {\n        isRunning: false,\n        elapsedTime: 0,\n        previousTime: 0\n    }\n\n    handleStopwatch = () => {\n        this.setState( prevState => ({ \n            isRunning: !prevState.isRunning \n        }))\n        if (!this.state.isRunning) {\n            this.setState({ previousTime: Date.now() })\n        }\n\n    }\n\n    componentDidMount() {\n        this.intervalID = setInterval(() => this.tick(), 100)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalID);\n    }\n\n    tick = () => {\n        if (this.state.isRunning) {\n            const now = Date.now();\n            this.setState( prevState => ({\n                previousTime: now,\n                elapsedTime: prevState.elapsedTime + (now - this.state.previousTime) \n            }))\n        }\n    }\n\n    handleReset= () => {\n        this.setState({ elapsedTime: 0 });\n    }\n\n    render() {\n        const seconds = Math.floor(this.state.elapsedTime/1000);\n        return(\n            <div className=\"stopwatch\">\n                <h2>Stopwatch</h2>\n                <span className=\"stopwatch-time\">{ seconds }</span>\n                <button onClick={this.handleStopwatch}>{this.state.isRunning ? \"Stop\" : \"Start\"}</button>\n                <button onClick={this.handleReset}>Reset</button>\n            </div>\n        )\n    };\n};\n\nexport default Stopwatch;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport Stats from './Stats';\nimport Stopwatch from './Stopwatch';\n\nconst Header = ({ title }) => {\n    return (\n      <header>\n        <Stats />\n        <h1>{ title }</h1>\n        <Stopwatch />\n      </header>\n    );\n  }\n\nHeader.propTypes = {\n  title: PropTypes.string\n}\n\nHeader.defaultProps = {\n  title: \"Scoreboard\"\n}\n\n  export default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Counter = ({ index, score, changeScore }) => {\n    return (\n    <div className=\"counter\">\n        <button className=\"counter-action decrement\" onClick={() => changeScore(index, -1)}> - </button>\n        <span className=\"counter-score\">{ score }</span>\n        <button className=\"counter-action increment\" onClick={() => changeScore(index, 1)}> + </button>\n    </div>\n    );\n  }\n\n  Counter.propTypes = {\n    index: PropTypes.number,\n    score: PropTypes.number,\n    changeScore: PropTypes.func\n  }\n\n  export default Counter;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst Crown = ({ isHighScore }) => (\n\n    <svg viewBox=\"0 0 44 35\"  className={isHighScore ? 'is-high-score' : null}>\n        <path d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\" transform=\"translate(0 0.301727)\"/>\n        <rect width=\"30.4986\" height=\"3.07759\" transform=\"translate(6.56987 31.5603)\"/>\n    </svg>\n)\n\nCrown.propTypes = {\n    isHighScore: PropTypes.bool\n}\n\nexport default Crown;","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport Counter from './Counter';\nimport Crown from './Crown';\n\nclass Player extends PureComponent {\n\n  static propTypes = {\n    removePlayer: PropTypes.func,\n    id: PropTypes.number,\n    name: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n    changeScore: PropTypes.func,\n    index: PropTypes.number,\n    isHighScore: PropTypes.bool\n  };\n\n  render() {\n    const { \n      removePlayer,\n      name,\n      score,\n      changeScore,\n      isHighScore,\n      index,\n      id\n    } = this.props\n    \n    return(\n      <div className=\"player\">\n        <span className=\"player-name\">\n          <button className=\"remove-player\" onClick={() => removePlayer(id)}>âœ–</button>\n          <Crown \n            isHighScore={isHighScore}\n          />\n          { name }\n        </span>\n  \n        <Counter \n            score={score}\n            changeScore={changeScore}\n            index={index}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Player;\n      ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddPlayerForm extends Component {\n    state = {\n        value: ''\n    }\n\n    handleValueChange = (e) => {\n        this.setState({ value: e.target.value});\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.value.trim() == \"\") {\n            alert('Input can not be empty.');\n            return false;\n        } else {\n            this.props.addPlayer(this.state.value);\n            this.setState({\n                value: ''\n            }\n        )}\n    }\n\n    static propTypes = {\n        addPlayer: PropTypes.func\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <input \n                    type=\"text\"\n                    placeholder=\"Enter Player's Name\"\n                    value={this.state.value}\n                    onChange={this.handleValueChange}\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Add Player\"\n                />\n            </form>\n        )\n    }\n}\n\nexport default AddPlayerForm;","import React, { Component } from 'react';\nimport { Provider } from './Context';\nimport Header from './Header';\nimport Player from './Player';\nimport AddPlayerForm from './AddPlayerForm';\n\nclass App extends Component {\n  state = {\n    players: [\n      {\n        name: \"Jason\" ,\n        score: 0,\n        id: 1\n      },\n      {\n        name: \"Mason\" ,\n        score: 0,\n        id: 2\n      },\n      {\n        name: \"Nason\" ,\n        score: 0,\n        id: 3\n      },\n      {\n        name: \"Grayson\" ,\n        score: 0,\n        id: 4\n      },\n       {\n        name: \"Kaison\" ,\n        score: 0,\n        id: 5\n      }\n    ],\n    title: 'Fooking Scoreboard'\n  };\n\n  prevPlayerId = 5;\n\n  handleRemovePlayer = (id) => {\n    this.setState( prevState => {\n      return {\n        players: prevState.players.filter(p => p.id !== id)\n      };\n    });\n  }\n\n  handleScoreChange = (index, delta) => {\n    this.setState( prevState => ({\n      score: prevState.players[index].score += delta\n    }));\n\n  }\n\n  handleAddNewPlayer = (name) => {\n    this.setState( prevState => {\n      return {\n        players: [ \n          ...prevState.players,\n          {\n            name: name,\n            score: 0,\n            id: this.prevPlayerId += 1\n          }\n        ]\n      }\n    })\n  }\n\ngetHighScore = () => {\n  const scores = this.state.players.map( p => p.score)\n  const highScore = Math.max(...scores)\n  if (highScore) {\n    return highScore;\n  }\n  return null;\n}\n\n  render() {\n    const highScore = this.getHighScore();\n    return (\n      <Provider value={this.state.players}>\n        <div className=\"scoreboard\">\n          <Header \n            title={this.state.title}\n          />\n          {this.state.players.map( (player, index) =>\n            <Player \n              name={player.name}\n              id={player.id}\n              key={player.id.toString()} \n              removePlayer={this.handleRemovePlayer}\n              score={player.score}\n              changeScore={this.handleScoreChange}\n              index={index}\n              isHighScore={highScore === player.score}\n            />\n          )}\n          <AddPlayerForm \n            addPlayer={this.handleAddNewPlayer}\n          />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}